diff -Nur anaconda-13.21.215.orig/platform.py anaconda-13.21.215/platform.py
--- anaconda-13.21.215.orig/platform.py	2013-09-12 03:37:48.000000000 +0800
+++ anaconda-13.21.215/platform.py	2014-05-13 17:15:59.117999992 +0800
@@ -19,6 +19,12 @@
 #
 # Authors: Chris Lumens <clumens@redhat.com>
 #
+# Modification for ns6.5:
+# No.1:
+# Author(s): guo jianxing <jianxing.guo@cs2c.com.cn>
+# Description: EFI: refetch /boot/efi if get /boot error; 
+#              while use boot_device, first check whether it is null.
+# KeyWords: * for ns6.5, check boot_device for EFI
 
 import iutil
 import parted
@@ -279,7 +285,11 @@
 
         # Get the /boot device, which will be different from req on EFI
         mntDict = self._mntDict()
-        boot_device = mntDict.get("/boot", mntDict.get("/"))
+        # Neokylin chang begin
+        # modify for ns6.5, check boot_device for EFI
+        #boot_device = mntDict.get("/boot", mntDict.get("/"))
+        boot_device = mntDict.get("/boot", mntDict.get("/boot/efi", mntDict.get("/")))
+        # Neokylin end
 
         errors = Platform.checkBootRequest(self, req)
 
@@ -293,7 +303,11 @@
             errors += boot_errors
 
         # Limit /boot to 2TB
-        if boot_device.size > 2*1024*1024:
+        # Neokylin chang begin
+        # modify for ns6.5, check boot_device for EFI
+        #if boot_device.size > 2*1024*1024:
+        if boot_device and  boot_device.size > 2*1024*1024:
+        # Neokylin end
             # If there is no /boot, ask for one
             if boot_device.format.mountpoint == "/":
                 errors.append(_("/boot must be less than 2TB. Shrink / or create a separate /boot partition."))
diff -Nur anaconda-13.21.215.orig/po/zh_CN.po anaconda-13.21.215/po/zh_CN.po
--- anaconda-13.21.215.orig/po/zh_CN.po	2014-05-15 09:07:53.731999960 +0800
+++ anaconda-13.21.215/po/zh_CN.po	2014-05-15 11:27:47.880000655 +0800
@@ -1282,7 +1282,10 @@
 #: platform.py:316
 #, python-format
 msgid "%s must have a %s disk label."
-msgstr "%s 必须有一个 %s 磁盘标签。"
+msgstr "您的 %s 磁盘必须要有 %s 磁盘标签。请使用自动分区或手动处理后再安装。"
+
+msgid "There is not any %s disk label of your disks. Please use auto partition or first fix it manually."
+msgstr "您的磁盘不带 %s 磁盘标签，请使用自动分区或手动处理后再安装。"
 
 #: platform.py:348
 #, python-format
@@ -2559,7 +2562,7 @@
 #: iw/filter_gui.py:154
 #, python-format
 msgid "<b>%s device(s) (%s MB) selected</b> out of %s device(s) (%s MB) total."
-msgstr "您选择了<b> %s 设备（%s MB）</b>从 %s 设备（%s MB）中。"
+msgstr "您已选择的设备：<b> %s （%s MB）</b>        系统所提供的设备： %s （%s MB）"
 
 #: iw/filter_gui.py:404
 msgid "Device Filter"
@@ -6016,11 +6019,11 @@
 
 #: ui/blwhere.glade.h:4
 msgid "First BIOS drive:"
-msgstr "第一 BISO 驱动器："
+msgstr "第一 BIOS 驱动器："
 
 #: ui/blwhere.glade.h:5
 msgid "Fourth BIOS drive:"
-msgstr "第四 BISO 驱动器："
+msgstr "第四 BIOS 驱动器："
 
 #: ui/blwhere.glade.h:6
 msgid "MBR"
@@ -6028,11 +6031,11 @@
 
 #: ui/blwhere.glade.h:7
 msgid "Second BIOS drive:"
-msgstr "第二 BISO 驱动器："
+msgstr "第二 BIOS 驱动器："
 
 #: ui/blwhere.glade.h:8
 msgid "Third BIOS drive:"
-msgstr "第三 BISO 驱动器："
+msgstr "第三 BIOS 驱动器："
 
 #: ui/blwhere.glade.h:9
 msgid "Where would you like to install the boot loader for your system?"
@@ -6188,7 +6191,7 @@
 #: ui/filter.glade.h:2
 #, no-c-format
 msgid "<b>%s devices (%s) selected</b> out of %s devices (%s) total."
-msgstr "您选择了<b> %s 设备（%s MB）</b>从 %s 设备（%s MB）中。"
+msgstr "您已选择设备：<b> %s （%s MB）</b>        系统所提供的设备： %s （%s MB）      "
 
 #: ui/filter.glade.h:3
 msgid ""
diff -Nur anaconda-13.21.215.orig/storage/__init__.py anaconda-13.21.215/storage/__init__.py
--- anaconda-13.21.215.orig/storage/__init__.py	2014-05-15 09:07:53.731999960 +0800
+++ anaconda-13.21.215/storage/__init__.py	2014-05-15 09:20:04.732000201 +0800
@@ -38,6 +38,11 @@
 # Author(s): Xia Lei <lei.xia@cs2c.com.cn>
 # Description: reset the suggestion value of root size 
 # KeyWords: * for ns6.5, reset the suggestion value of root size
+#
+# No.4:
+# Author(s): Guo jianxing <jianxing.guo@cs2c.com.cn>
+# Description: before checkBootRequest(boot), add check disk labeltype for EFI
+# KeyWords: * for ns6.5, add check disks has efi disktype
 
 # Neokylin add begin
 # add for ns6.5, upgrade neokylin os to replace rhel
@@ -1141,6 +1146,23 @@
             warnings.append(_("Installing on a FireWire device.  This may "
                               "or may not produce a working system."))
 
+        # Neokylin add begin
+        # add for ns6.5, add check disks has efi disktype
+        try:
+            defaultDiskLabel = self.anaconda.platform.defaultDiskLabelType
+        except:
+            defaultDiskLabel = None
+        if defaultDiskLabel and self.anaconda.platform.isEfi:
+            checkLabelFlag = False
+            for chdisk in self.disks:
+                chpartedDisk = chdisk.format.partedDisk
+                if chpartedDisk.type == defaultDiskLabel or chpartedDisk.type == "gpt":
+                    checkLabelFlag = True
+            if not checkLabelFlag:
+                errors.append(_("There is not any %s disk label of your disks. Please use auto partition or first fix it manually.") % (defaultDiskLabel.upper()))
+                return (errors, warnings)
+        # Neokylin end
+
         errors.extend(self.anaconda.platform.checkBootRequest(boot))
 
         if not swaps:
